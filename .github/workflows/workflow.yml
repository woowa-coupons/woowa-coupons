name: CI/CD

on:
  push:
    branches:
      - test-be-release

permissions:
  contents: read

jobs:
  backend-deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./be/promotion

    steps:
      # 1. Source 단계 - 저장소 Checkout
      - name: Checkout Source Code
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.PRIVATE_REPO_ACCESS_TOKEN }}
          submodules: true
#
#      # 2. JDK 설치
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#
#      # 3. Build 단계
#      - name: Build with Gradle
#        run: |
#          chmod +x ./gradlew
#          ./gradlew clean build
#
#      # 4. GHCR(github container registry) 로그인
#      - name: Login to GHCR
#        uses: docker/login-action@v1
#        with:
#          registry: ghcr.io
#          username: ${{secrets.GH_USER}}
#          password: ${{secrets.PRIVATE_REPO_ACCESS_TOKEN}}
#
#      # 5. Build & Push to GHCR
#      - name: Build and Push
#        uses: docker/build-push-action@v2
#        with:
#          context: .
#          # repository 기준 도커파일 위치
#          file: ./Dockerfile
#          push: true
#          tags: ghcr.io/${{secrets.GH_USER}}/woowa-promotion-was:0.0

      # 6. EC2로 docker-compose.yml 전송
      - name: Deliver docker-compose.yml File
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.WAS_HOST }}
          key: ${{ secrets.SSH_KEY }}
          source: "docker-compose.yml"
          target: "/home/ubuntu"

#      # 7. WAS 인스턴스 접속 & 애플리케이션 실행
#      - name: Connect to WAS & Execute Application
#        uses: appleboy/ssh-action@v0.1.6
#        with:
#          host: ${{ secrets.WAS_HOST }}
#          username: ${{ secrets.WAS_USERNAME }}
#          key: ${{ secrets.SSH_KEY }}
#          port: ${{ secrets.WAS_SSH_PORT }}
#          script: |
#            echo ${{secrets.PRIVATE_REPO_ACCESS_TOKEN}} > TOKEN.txt
#            cat TOKEN.txt | docker login https://ghcr.io -u ${{secrets.GH_USER}} --password-stdin
#
#            docker-compose -f docker-compose.yml down -v
#            docker-compose -f docker-compose.yml pull
#            docker-compose -f docker-compose.yml up -d
#            docker image prune -f
